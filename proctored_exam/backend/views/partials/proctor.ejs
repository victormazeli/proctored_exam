<!-- views/partials/proctor.ejs -->
<!-- Proctor Webcam Container -->
<div id="proctor-webcam-container" class="proctor-webcam-container <%= webcamClass || '' %>">
    <video id="proctor-webcam" autoplay playsinline muted></video>
    <div class="proctor-status">
      <div id="proctor-status-indicator" class="status-indicator status-active"></div>
      <div id="proctor-status-text" class="status-text">Proctoring Active</div>
    </div>
    <div class="proctor-controls">
      <button id="toggle-webcam-size" class="webcam-control-btn" title="Toggle size">
        <i class="fas fa-expand-alt"></i>
      </button>
    </div>
  </div>
  
  <!-- Proctor Warning Modal -->
  <div id="proctor-warning-modal" class="modal hidden">
    <div class="modal-overlay"></div>
    <div class="modal-container max-w-md">
      <div class="modal-header bg-yellow-50">
        <h2 class="text-yellow-800">Proctor Warning</h2>
        <button id="close-proctor-warning" class="modal-close">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="text-center mb-4">
          <i class="fas fa-exclamation-triangle text-4xl text-yellow-500"></i>
        </div>
        <p id="proctor-warning-message" class="text-center">
          Warning message will appear here.
        </p>
      </div>
      <div class="modal-footer justify-center">
        <button id="acknowledge-proctor-warning" class="btn btn-warning">I Understand</button>
      </div>
    </div>
  </div>
  
  <!-- Webcam Permission Modal -->
  <div id="webcam-permission-modal" class="modal hidden">
    <div class="modal-overlay"></div>
    <div class="modal-container max-w-md">
      <div class="modal-header">
        <h2>Camera Access Required</h2>
      </div>
      <div class="modal-body">
        <div class="text-center mb-4">
          <i class="fas fa-video text-4xl text-blue-500"></i>
        </div>
        <p class="text-center">
          This exam is proctored and requires webcam access. Please allow camera access to continue.
        </p>
        <div class="bg-blue-50 border-l-4 border-blue-400 p-4 mt-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <i class="fas fa-info-circle text-blue-400"></i>
            </div>
            <div class="ml-3">
              <p class="text-sm text-blue-700">
                Your webcam feed is only used for proctoring during this exam session and is not recorded.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer justify-center">
        <button id="retry-webcam" class="btn btn-primary">Allow Camera Access</button>
      </div>
    </div>
  </div>
  
  <style>
    .proctor-webcam-container {
      @apply fixed bottom-4 right-4 w-40 h-30 bg-black rounded-md overflow-hidden shadow-lg border-2 border-gray-800 z-10;
      transition: all 0.3s ease-in-out;
    }
    
    .proctor-webcam-container.enlarged {
      @apply w-64 h-48;
    }
    
    .proctor-status {
      @apply absolute bottom-0 left-0 right-0 bg-black bg-opacity-75 text-white text-xs py-1 px-2 flex items-center;
    }
  
    .modal.hidden {
      display: none;
    }
  </style>
  
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const webcamElement = document.getElementById("proctor-webcam");
      const webcamContainer = document.getElementById("proctor-webcam-container");
      const toggleSizeBtn = document.getElementById("toggle-webcam-size");
      const permissionModal = document.getElementById("webcam-permission-modal");
      const retryWebcamBtn = document.getElementById("retry-webcam");
  
      function startWebcam() {
        navigator.mediaDevices.getUserMedia({ video: true })
          .then(stream => {
            webcamElement.srcObject = stream;
            permissionModal.classList.add("hidden");
          })
          .catch(() => {
            permissionModal.classList.remove("hidden");
          });
      }
  
      toggleSizeBtn.addEventListener("click", () => {
        webcamContainer.classList.toggle("enlarged");
      });
  
      retryWebcamBtn.addEventListener("click", startWebcam);
  
      startWebcam();
    });
  </script>
  